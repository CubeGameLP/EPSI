@inject HttpClient client

<MudDialog>
    <TitleContent>
        QR-Code Scanner
    </TitleContent>
    <DialogContent>
        <MudTextField @bind-Value="qrCodeResult" id="qrCodeResult" Class="invisible" />
        <MudText Typo="Typo.h6">Scan QR Code...</MudText>
        <MudContainer Class="justify-center d-flex">
            <MudPaper id="qrCodeReader" Style="width: 500px;" Class="pa-4" />
        </MudContainer>
    </DialogContent>
    <DialogActions>
        <MudButton Color="Color.Primary" OnClick="Close">Ok</MudButton>
    </DialogActions>
</MudDialog>

<script>
    function domReady(fn) {
        if (document.readyState === "complete" || document.readyState === "interactive") {
            setTimeout(fn, 1);
        } else {
            document.addEventListener("DOMContentLoaded", fn);
        }
    }

    domReady(function () {
        var qrCode = document.getElementById('qrCodeResult');
        var lastResult, countResults = 0;

        function onScanSuccess(decodeText, decodeResult) {
            if (decodeText !== lastResult) {
                ++countResults;
                lastResult = decodeText;
                qrCode.innerHTML = decodeText;  // QR-Code-Text anzeigen
            }
        }

        var htmlScanner = new Html5QrcodeScanner("qrCodeReader", { fps: 10, qrbox: 250 });
        htmlScanner.render(onScanSuccess);
    });
</script>

@code {
    [CascadingParameter]
    private MudDialogInstance MudDialog { get; set; }
    private string qrCodeResult { get; set; }
    private FilterDTO filterDTO = new();

    private async Task Close()
    {
        await AfterScan();
        MudDialog.Close(DialogResult.Ok(filterDTO));
    }

    private async Task AfterScan()
    {
        if (!string.IsNullOrWhiteSpace(qrCodeResult))
        {
            var response = await client.GetAsync($"api/transform?{qrCodeResult}");
            var filterDTO = await response.Content.ReadFromJsonAsync<FilterDTO>();
        }
    }
}