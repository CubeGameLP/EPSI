@inherits LayoutComponentBase
@inject IDialogService DialogService
@inject NavigationManager NavigationManager

<MudThemeProvider IsDarkMode="DarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<MudLayout>
    <MudAppBar Style="@($"background:{Colors.Pink.Darken1};")" Class="fixed" Fixed="false">
        <MudIconButton Icon="@Icons.Material.Filled.QrCodeScanner" OnClick="OpenDialog" />
        <MudSpacer />
        <MudText Typo="Typo.h4" Style="cursor:pointer;" onclick="@(() => NavigationManager.NavigateTo("/"))">
            Inventar App
        </MudText>
        <MudSpacer />
        <MudToggleIconButton @bind-Toggled="DarkMode"
                             Icon="@Icons.Material.Filled.LightMode"
                             Style="@($"color:{(DarkMode ? Colors.Purple.Darken4 : Colors.Yellow.Default)};")"
                             ToggledIcon="@Icons.Material.Filled.DarkMode"
                             title="@(DarkMode ? "On" : "Off")" />
    </MudAppBar>

    <MudHidden Breakpoint="Breakpoint.Xs" Invert="true">
        <MudForm Class="pt-16">
            @Body
        </MudForm>
    </MudHidden>

    <MudHidden Breakpoint="Breakpoint.SmAndUp" Invert="true" Class="pa-16">
        <MudForm Class="pa-16">
            @Body
        </MudForm>
    </MudHidden>
</MudLayout>

@code {
    public bool _open = false;
    public bool DarkMode { get; set; }

    private void ToggleDrawer()
    {
        _open = !_open;
    }

    private async Task OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true };
        var dialog = await DialogService.ShowAsync<QRCode>("Scanner", options);
    }
}